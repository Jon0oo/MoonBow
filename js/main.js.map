{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://moonbow.github.io/./js/animations.js","webpack://moonbow.github.io/./js/main.js"],"sourcesContent":["// Moves the indicator to the active dot's position.\r\nexport function updateIndicatorPosition(activeDot) {\r\n    const indicator = document.querySelector('.nav-dot-indicator');\r\n    if (!indicator || !activeDot) return;\r\n  \r\n    const container = activeDot.parentElement; // .nav-dots container\r\n    const offset = activeDot.offsetLeft; // Get the left offset of the dot within the container\r\n  \r\n    indicator.style.transform = `translateX(${offset}px)`;\r\n  }\r\n  \r\n  // Observe slides and update the indicator.\r\n  export function observeSlides() {\r\n    const slides = document.querySelectorAll('.slide');\r\n    const dots = document.querySelectorAll('.nav-dot');\r\n    const slidesContainer = document.querySelector('.slides-container');\r\n  \r\n    if (!slides.length || !dots.length || !slidesContainer) return;\r\n  \r\n    const observer = new IntersectionObserver(entries => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                const index = Array.from(slides).indexOf(entry.target);\r\n                \r\n                // Remove 'active' class from all dots.\r\n                dots.forEach(dot => dot.classList.remove('active'));\r\n                \r\n                if (dots[index]) {\r\n                    dots[index].classList.add('active');\r\n                    updateIndicatorPosition(dots[index]);\r\n                }\r\n            }\r\n        });\r\n    }, {\r\n        root: slidesContainer, // Use the slides container as the viewport.\r\n        threshold: 0.6         // 60% of the slide must be visible to trigger.\r\n    });\r\n  \r\n    slides.forEach(slide => observer.observe(slide));\r\n  }\r\n  \r\n  // Set up click functionality for the navigation dots.\r\n  export function setupDotNavigation() {\r\n    const dots = document.querySelectorAll('.nav-dot');\r\n    const slides = document.querySelectorAll('.slide');\r\n  \r\n    if (!dots.length || !slides.length) return;\r\n  \r\n    dots.forEach((dot, index) => {\r\n        dot.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n  \r\n            if (slides[index]) {\r\n                slides[index].scrollIntoView({ behavior: \"smooth\", block: \"nearest\", inline: \"start\" });\r\n                updateIndicatorPosition(dot);\r\n  \r\n\r\n\r\n                \r\n                // Update active dot manually since IntersectionObserver might not update instantly\r\n                dots.forEach(d => d.classList.remove('active'));\r\n                dot.classList.add('active');\r\n\r\n\r\n\r\n// Update the URL to reflect the active slide\r\nupdateURLWithSlide(slides[index].id);\r\n\r\n\r\n            }\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  // Function to update the URL with the active slide's ID\r\n  export function updateURLWithSlide(slideId) {\r\n    const url = new URL(window.location);\r\n    url.searchParams.set(\"slide\", slideId);\r\n    window.history.pushState(null, \"\", url.pathname + url.search);\r\n}\r\n","import '../css/global.css';\r\nimport '../css/slideFastIt.css';\r\nimport '../css/slideFactoryIt.css';\r\nimport '../css/slideFiberFlow.css';\r\nimport '../css/slideSmartLink.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { observeSlides, setupDotNavigation,updateIndicatorPosition } from './animations.js';\r\n\r\n\r\n\r\n\r\n// Überprüfen, ob der <base>-Tag bereits existiert\r\nlet baseTag = document.querySelector('base');\r\nif (!baseTag) {\r\n    baseTag = document.createElement('base');\r\n    document.head.appendChild(baseTag);\r\n}\r\n// Setzen der href-Eigenschaft des <base>-Tags auf das MoonBow-Verzeichnis\r\nbaseTag.href = '/MoonBow/';\r\n\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    setupDropdowns();\r\n    setupDotClickHandlers();\r\n    observeSlides();\r\n    setupDotNavigation();\r\n    setupDropdownSlideNavigation(); \r\n\r\n    // Check for slide parameter in URL\r\n    const params = new URLSearchParams(window.location.search);\r\n    const slideId = params.get('slide');\r\n    if (slideId) {\r\n        navigateToSlide(slideId);\r\n    }\r\n});\r\n\r\n\r\n\r\n// Function to handle smooth scrolling to a slide\r\nfunction navigateToSlide(slideId) {\r\n    const slide = document.getElementById(slideId);\r\n    if (slide) {\r\n        slide.scrollIntoView({ behavior: \"smooth\", block: \"nearest\", inline: \"start\" });\r\n\r\n        // Update nav dots\r\n        const dots = document.querySelectorAll('.nav-dot');\r\n        dots.forEach(dot => dot.classList.remove('active'));\r\n        const targetDot = Array.from(dots).find(dot => dot.getAttribute('data-slide') === slideId);\r\n        if (targetDot) {\r\n            targetDot.classList.add('active');\r\n            updateIndicatorPosition(targetDot);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Opens a dropdown while closing any other open dropdowns.\r\nfunction openDropdown(dropdownId) {\r\n    document.querySelectorAll('.dropdown.show').forEach(dropdown => {\r\n        if (dropdown.id !== dropdownId) {\r\n            dropdown.classList.remove('show');\r\n        }\r\n    });\r\n    const dropdown = document.getElementById(dropdownId);\r\n    if (dropdown) {\r\n        dropdown.classList.add('show');\r\n    }\r\n}\r\n\r\n// Closes the specified dropdown.\r\nfunction closeDropdown(dropdownId) {\r\n    const dropdown = document.getElementById(dropdownId);\r\n    if (dropdown) {\r\n        dropdown.classList.remove('show');\r\n    }\r\n}\r\n\r\n\r\n// Initializes dropdown behavior.\r\nfunction setupDropdowns() {\r\n    const dropdownToggles = document.querySelectorAll('nav .menu > li > a[data-dropdown-id]');\r\n    dropdownToggles.forEach(toggle => {\r\n        const dropdownId = toggle.getAttribute('data-dropdown-id');\r\n        toggle.addEventListener('mouseenter', () => openDropdown(dropdownId));\r\n        toggle.parentElement.addEventListener('mouseleave', () => closeDropdown(dropdownId));\r\n    });\r\n\r\n    document.addEventListener('click', function (event) {\r\n        if (!event.target.closest('.menu')) {\r\n            document.querySelectorAll('.dropdown.show').forEach(dropdown => dropdown.classList.remove('show'));\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction setupDropdownSlideNavigation() {\r\n    const dropdownLinks = document.querySelectorAll('.dropdown a[data-slide]');\r\n    dropdownLinks.forEach(link => {\r\n        link.addEventListener('click', event => {\r\n            event.preventDefault();\r\n            const slideId = link.getAttribute('data-slide');\r\n\r\n            // Ensure the base path is correct for MoonBow\r\n            const basePath = \"/MoonBow/\";\r\n\r\n            // Check if we are NOT already on the homepage\r\n            if (!window.location.pathname.startsWith(basePath) || \r\n                (window.location.pathname !== basePath && !window.location.pathname.endsWith('/'))) {\r\n                \r\n                // Redirect to /MoonBow/ while keeping the slide parameter\r\n                window.location.href = `${basePath}?slide=${slideId}`;\r\n                return;\r\n            }\r\n\r\n            // If already on /MoonBow/, navigate to the slide smoothly\r\n            navigateToSlide(slideId);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Scroll smoothly to the slide.\r\nexport function scrollToSlide(event, slideId) {\r\n    event.preventDefault();\r\n    const slide = document.getElementById(slideId);\r\n    if (slide) {\r\n        slide.scrollIntoView({ behavior: \"smooth\", block: \"nearest\", inline: \"start\" });\r\n    }\r\n}\r\n\r\n// Handles navigation dot clicks.\r\nfunction setupDotClickHandlers() {\r\n    const dots = document.querySelectorAll('.nav-dot');\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', event => {\r\n            const slideId = dot.getAttribute('data-slide');\r\n            scrollToSlide(event, slideId);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction adjustSlides() {\r\n    const slides = document.querySelectorAll('.slide');\r\n    const slidesContainer = document.querySelector('.slides-container');\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = `${window.innerWidth}px`;\r\n        slide.style.height = `${window.innerHeight}px`;\r\n    });\r\n\r\n    // Ensure the active slide is properly centered after resizing\r\n    const activeDot = document.querySelector('.nav-dot.active');\r\n    if (activeDot) {\r\n        const slideId = activeDot.getAttribute('data-slide');\r\n        setTimeout(() => navigateToSlide(slideId), 50); // Small delay to allow resizing adjustments\r\n    }\r\n}\r\n\r\n// Run on window resize and DOM load\r\nwindow.addEventListener('resize', adjustSlides);\r\nwindow.addEventListener('DOMContentLoaded', adjustSlides);\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["updateIndicatorPosition","activeDot","indicator","document","querySelector","parentElement","offset","offsetLeft","style","transform","concat","baseTag","navigateToSlide","slideId","slide","getElementById","scrollIntoView","behavior","block","inline","dots","querySelectorAll","forEach","dot","classList","remove","targetDot","Array","from","find","getAttribute","add","adjustSlides","slides","width","window","innerWidth","height","innerHeight","setTimeout","createElement","head","appendChild","href","addEventListener","toggle","dropdownId","dropdown","id","openDropdown","closeDropdown","event","target","closest","preventDefault","scrollToSlide","slidesContainer","length","observer","IntersectionObserver","entries","entry","isIntersecting","index","indexOf","root","threshold","observe","observeSlides","url","d","URL","location","searchParams","set","history","pushState","pathname","search","link","basePath","startsWith","endsWith","URLSearchParams","get"],"sourceRoot":""}